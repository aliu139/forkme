//travis-ci.org/angular/angular.js.svg
https
//travis-ci.org/angular/angular.js
client-side
good
old
htmlâ€™s
2-way
easy
server-side
hashbang
*
//angularjs.org
//docs.angularjs.org/tutorial
//docs.angularjs.org/api
//docs.angularjs.org/guide
//dashboard.angularjs.org
//github.com/angular/angular
end-to-end
e2e
grunt
separate
[
//ga-beacon.appspot.com/ua-8594346-11/angular.js/readme.md
next
other
interconnected
well-oiled
right
short
different
proper
user
main
major
frameworks
programming
new
additional
own
special
declarative
various
simple
plain
same
suppose
available
maintainable
readable
complete
two-way
ready
necessary
modular
testable
robust
high-grade
careful
relevant
customizable
extensible
real
popular
subject
high
basic
such
divisible
openness
inclusivity
following
theoretical
mental
deductive
debatable
actual
free
many
library
full
pragmatic
incremental
algorithmic
useful
fleeting
valuable
difficult
`js
complex
single
important
reusable
solid
user.firstname
able
specific
exact
text
mobile
typical
multiple
immutable
update
wasteful
pure
memoized
last
var
cachedarg
=
user.dateofbirth
natural
particular
user.id
id
critical
null
box
const
updateuserlikes
repeated
low-level
child
updatestate
key
stable
tree
composable
arg
little
several
nice
familiar
functional
intermediate
./word-count
possible
binary
unbalanced
optional
english
avoid
original
insert
modified
key-value
is-a
compatible
height
inefficent
|
has-a
/
similar
external
top
frequent
total
predictable
minor
above
word-count
huge
much
read/printed
constant
n
bst
pre-sorted
linked-list-like
heap
parallel
runing
ispunct
due
ice-cream
word-stemming
stupid
idiotic
weird
dumb
lazy
present
int
messy
updated
uncanny
sample
efficient
previous
drumroll
effective
interesting
used
noticable
enough
sorry
extra
general
long
unexpected
surprising
random
balanced
average
loops
recursive
large
normal
templated
quicksort.ps
selectionsort.ps
pre-existing
preferred
apparent
end-programmer
unparameterized
parameterized
<
invalid
successful
true
appropriate
false
consistant
interactive
self-balancing
node
splay
provided
small
personal
syntax
public
describes
symmetrical
node-parent-grandparent
synonymous
accurate
double
hang
generic
max
logical
maximum
common
hard
sorted
doubly-linked
log
linearly
proportional
running
skewed/inaccurate
processing
sort-
aberrant
quicksort-
poor
dense
fast
semi-aberrant
bad
canonical
re-balancing
responsible
wrapper
necessarry
respecive
identical
vocabulary
regular
whereas
slow
fair
decent
big
few
second
instantiated
overhead
entire
specialized
run
nlog
quick
